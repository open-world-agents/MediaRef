name: 'Setup uv'
description: 'Setup uv and virtual-uv'
inputs:
  show-uv-cache-info:
    description: 'Whether to show uv cache hit information'
    required: false
    default: 'false'
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  create-venv:
    description: 'Whether to create and activate virtual environment'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Install the latest version of uv
      id: setup-uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true
        python-version: ${{ inputs.python-version }}
    
    - name: Create and Activate Virtual Environment
      if: inputs.create-venv == 'true'
      shell: bash
      run: |
        uv venv
        echo "VIRTUAL_ENV=$PWD/.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH
        echo "Virtual environment activated: $VIRTUAL_ENV"
        echo "To use this environment in later steps, add 'shell: bash -el {0}' to your step configuration."

    - name: Show uv cache information
      if: inputs.show-uv-cache-info == 'true' && steps.setup-uv.outputs.cache-hit == 'true'
      shell: bash
      run: echo "uv cache was restored"

    - name: Install virtual-uv
      shell: bash -el {0}
      run: pip install virtual-uv
